fastlane_version "1.89.0"

default_platform :android

platform :android do
  before_all do
   #notification(subtitle: "Start android pipeline", message: "Ready to start fastlane")
  end

  desc "Alpha release app. Run checks, test, assemble and upload to Fabric Beta"
  lane :alpha do |options|
    build_app(buildNumber: options[:buildNumber], input_apk_path: options[:input_apk_path], alias: options[:alias],
      storepass: options[:storepass],keystore_path: options[:keystore_path], tsa: options[:tsa], signed_apk_path: options[:signed_apk_path], keypass: options[:keypass])

    publish_fabric_beta(api_token: options[:api_token], build_secret: options[:build_secret])
  end

  desc "Clean assemble build with checks, test and reports"
  lane :build_app do |options|
    #Clean project directory
    gradle(task: "clean")

    assemble(buildNumber: options[:buildNumber])

    sign_apk(keystore_path: options[:keystore_path], input_apk_path: options[:input_apk_path],
      alias: options[:alias], storepass: options[:storepass], tsa: options[:tsa], signed_apk_path: options[:signed_apk_path], keypass: options[:keypass])

    #Run lint, checkstyle, findbugs and pmd
    gradle(task: "lint checkstyle findbugs pmd")
    
    #run tests and UI tests
    #gradle(task: "test connectedAndroidTest")
    gradle(task: "test")

    #Generate jacoco coverage reports for release and debug
    jacoco_gradle(build_type: "Release")
    jacoco_gradle(build_type: "Debug")
  end

  private_lane :assemble do |options|
    if options[:buildNumber]
      UI.message("Since no build number was specified 0 was used")
    end

    assemble_task = "assemble -PbuildNumber=\"#{ options[:buildNumber] ? options[:buildNumber] : "0" }\""
    gradle(task: assemble_task)
  end

  #lane :assemble_signed_apk do |options|
  #  if options[:buildNumber]
  #    UI.message("Since no build number was specified 0 was used")
  #  end
  #
  #  unless options[:service] && options[:account] || options[:password]
  #    UI.error("Require password to unlock keystore to sign apk")
  #  else options[:service] && options[:account]
  #    pwd = "#{ options[:service] && options[:account] ? pw_from_keychain(service: options[:service], account: options[:account]) : "" }"
  #    pwd = "#{ options[:password] && pwd.empty? ? options[:password] : pwd }"
  #  end
  #
  #  assemble_task = "assemble -PbuildNumber=\"#{ options[:buildNumber] ? options[:buildNumber] : "0" }\" " +
  #    "#{ !pwd.empty? ? "-PstorePassword=\"" + pwd + "\" -PkeyPassword=\"" + pwd + "\" " : "" }" +
  #    "#{ options[:keyStorePath] ? "-PkeyStorePath=\"" + options[:keyStorePath] + "\"" : "" }"
  #
  #  gradle(task: assemble_task)
  #end

  desc "Distribute a new Beta via Crashlytics"
  private_lane :publish_fabric_beta do |options|
    if options[:api_token] && options[:build_secret]
      api_token = options[:api_token]
      build_secret = options[:build_secret]
    else
      api_token = pw_from_keychain(service: "crashlytics", account: "api-key")
      build_secret = pw_from_keychain(service: "crashlytics", account: "build-secret")
    end

    unless api_token.empty? || build_secret.empty?
       crashlytics(api_token: api_token, build_secret: build_secret)
     else
       UI.error("No api_token or build_secret were specified. Cannot upload to BETA.")
    end 
  end

  after_all do |lane|
   #notification(subtitle: "Fastlane", message: "Successfully finished fast lane")
  end

  error do |lane, exception|
   #notification(subtitle: "Error in fast lane", message: exception.message)
  end
end